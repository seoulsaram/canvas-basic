function BarChart(t) {
  var a = t.targetId,
    e = t.width,
    i = t.height,
    r = t.data,
    t = this;
  t.configureChart({ targetId: a, width: e, height: i, data: r }),
    t.performPreOperations(),
    t.prepareData(),
    t.drawChart();
}
function getRandomNum(t, a) {
  return (
    (t = Math.ceil(t)),
    (a = Math.floor(a)),
    Math.floor(Math.random() * (a - t)) + t
  );
}
(BarChart.prototype.configureChart = function (t) {
  var a = t.targetId,
    e = t.width,
    i = t.height,
    t = t.data;
  this.setCanvasParameters({ targetId: a, width: e, height: i, data: t }),
    this.setChartParameters();
}),
  (BarChart.prototype.setCanvasParameters = function (t) {
    var a = t.targetId,
      e = t.width,
      i = t.height,
      r = t.data,
      t = this;
    (t.id = a), (t.width = e), (t.height = i), (t.data = r);
  }),
  (BarChart.prototype.setChartParameters = function () {
    var t = this;
    (t.axisRatio = 10),
      (t.verticalMargin = (t.height * t.axisRatio) / 100),
      (t.horizontalMargin = (t.width * t.axisRatio) / 100),
      (t.axisColor = '#b1b1b1'),
      (t.axisWidth = 0.75),
      (t.fontRatio = 3),
      (t.fontFamily = 'times'),
      (t.fontStyle = 'normal'),
      (t.fontWeight = 300),
      (t.fontColor = '#666666'),
      (t.verticalFontSize = (t.height * t.fontRatio) / 100),
      (t.horizontalFontSize = (t.width * t.fontRatio) / 100),
      (t.guidelineColor = '#e5e5e5'),
      (t.guidelineWidth = 0.5);
  }),
  (BarChart.prototype.performPreOperations = function () {
    this.createCanvas(), this.handleData();
  }),
  (BarChart.prototype.createCanvas = function () {
    var t = this,
      a = document.createElement('canvas');
    (a.id = t.id + '-' + Math.random()),
      (a.width = t.width),
      (a.height = t.height);
    var e = document.getElementById(t.id);
    e &&
      ((e.innerHTML = ''),
      e.appendChild(a),
      (t.canvas = a),
      (t.context = a.getContext('2d')));
  }),
  (BarChart.prototype.handleData = function () {
    var a = this;
    (a.labels = []),
      (a.values = []),
      a.data.forEach(function (t) {
        a.labels.push(t.label), a.values.push(t.value);
      });
  }),
  (BarChart.prototype.prepareData = function () {
    var t = this;
    (t.itemsNum = t.data.length),
      (t.maxValue = Math.max.apply(null, t.values)),
      (t.minValue = Math.min.apply(null, t.values)),
      (t.verticalAxisWidth = t.height - 2 * t.verticalMargin),
      (t.horizontalAxisWidth = t.width - 2 * t.horizontalMargin),
      (t.verticalUpperBound = 10 * Math.ceil(t.maxValue / 10)),
      (t.verticalLabelFreq = t.verticalUpperBound / t.itemsNum),
      (t.horizontalLabelFreq = t.horizontalAxisWidth / t.itemsNum);
  }),
  (BarChart.prototype.drawChart = function () {
    var t = this;
    t.drawVerticalAxis(),
      t.drawVerticalLabels(),
      t.drawHorizontalAxis(),
      t.drawHorizontalLabels(),
      t.drawHorizontalGuidelines(),
      t.drawVerticalGuidelines(),
      t.drawBars();
  }),
  (BarChart.prototype.drawVerticalAxis = function () {
    var t = this;
    t.context.beginPath(),
      (t.context.strokeStyle = t.axisColor),
      (t.context.lineWidth = t.axisWidth),
      t.context.moveTo(t.horizontalMargin, t.verticalMargin),
      t.context.lineTo(t.horizontalMargin, t.height - t.verticalMargin),
      t.context.stroke();
  }),
  (BarChart.prototype.drawHorizontalAxis = function () {
    var t = this;
    t.context.beginPath(),
      (t.context.strokeStyle = t.axisColor),
      (t.context.lineWidth = t.axisWidth),
      t.context.moveTo(t.horizontalMargin, t.height - t.verticalMargin),
      t.context.lineTo(
        t.width - t.horizontalMargin,
        t.height - t.verticalMargin
      ),
      t.context.stroke();
  }),
  (BarChart.prototype.drawVerticalLabels = function () {
    var t = this,
      a = ''
        .concat(t.fontStyle, ' ')
        .concat(t.fontWeight, ' ')
        .concat(t.verticalFontSize, ' ')
        .concat(t.fontFamily);
    (t.context.font = a),
      (t.context.textAlign = 'right'),
      (t.context.fillStyle = t.fontColor);
    for (
      var e =
          (t.verticalAxisWidth / t.verticalUpperBound) * t.verticalLabelFreq,
        i = 0;
      i <= t.itemsNum;
      i++
    ) {
      var r = t.verticalUpperBound - i * t.verticalLabelFreq,
        o = t.horizontalMargin - t.horizontalMargin / t.axisRatio,
        n = t.verticalMargin + i * e;
      t.context.fillText(r, o, n);
    }
  }),
  (BarChart.prototype.drawHorizontalLabels = function () {
    var t = this,
      a = ''
        .concat(t.fontStyle, ' ')
        .concat(t.fontWeight, ' ')
        .concat(t.verticalFontSize, ' ')
        .concat(t.fontFamily);
    (t.context.font = a),
      (t.context.textAlign = 'center'),
      (t.context.textBaseline = 'top'),
      (t.context.fillStyle = t.fontColor);
    for (var e = 0; e < t.itemsNum; e++) {
      var i =
          t.horizontalMargin +
          e * t.horizontalLabelFreq +
          t.horizontalLabelFreq / 2,
        r = t.height - t.verticalMargin + t.verticalMargin / t.axisRatio;
      t.context.fillText(t.labels[e], i, r);
    }
  }),
  (BarChart.prototype.drawHorizontalGuidelines = function () {
    var t = this;
    (t.context.strokeStyle = t.guidelineColor),
      (t.context.lineWidth = t.guidelineWidth);
    for (
      var a =
          (t.verticalAxisWidth / t.verticalUpperBound) * t.verticalLabelFreq,
        e = 0;
      e <= t.itemsNum;
      e++
    ) {
      var i = t.horizontalMargin,
        r = t.verticalMargin + e * a,
        o = t.horizontalMargin + t.horizontalAxisWidth,
        n = t.verticalMargin + e * a;
      t.context.beginPath(),
        t.context.moveTo(i, r),
        t.context.lineTo(o, n),
        t.context.stroke();
    }
  }),
  (BarChart.prototype.drawVerticalGuidelines = function () {
    var t = this;
    (t.context.strokeStyle = t.guidelineColor),
      (t.context.lineWidth = t.guidelineWidth);
    for (var a = 0; a <= t.itemsNum; a++) {
      var e = t.horizontalMargin + a * t.horizontalLabelFreq,
        i = t.height - t.verticalMargin + t.verticalMargin / t.axisRatio,
        r = t.horizontalMargin + a * t.horizontalLabelFreq,
        o = t.verticalMargin;
      t.context.beginPath(),
        t.context.moveTo(e, i),
        t.context.lineTo(r, o),
        t.context.stroke();
    }
  }),
  (BarChart.prototype.drawBars = function () {
    for (var t = this, a = 0; a < t.itemsNum; a++) {
      var e = t.createRandomRGBColor(),
        i = e.r,
        r = e.g,
        o = e.b,
        n = 'rgba('
          .concat(i, ', ')
          .concat(r, ',')
          .concat(o, ',')
          .concat(0.3, ')'),
        l = 'rgba('.concat(i, ', ').concat(r, ',').concat(o, ')'),
        e =
          t.horizontalMargin +
          a * t.horizontalLabelFreq +
          t.horizontalLabelFreq / t.axisRatio,
        i = t.height - t.verticalMargin,
        r = t.horizontalLabelFreq - (2 * t.horizontalLabelFreq) / t.axisRatio,
        o = (-1 * t.verticalAxisWidth * t.values[a]) / t.maxValue;
      t.context.beginPath(),
        (t.context.fillStyle = n),
        (t.context.strokeStyle = l),
        t.context.rect(e, i, r, o),
        t.context.stroke(),
        t.context.fill();
    }
  }),
  (BarChart.prototype.createRandomRGBColor = function () {
    return {
      r: getRandomNum(0, 257),
      g: getRandomNum(0, 257),
      b: getRandomNum(0, 257),
    };
  });
